1426828028
1426828056
1426828022
1426828066
1426828058
Filename: assignment.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    41     34.9 MiB     34.9 MiB           1   @profile
    42                                         def main():
    43     34.9 MiB      0.0 MiB           1       args = _parse_args()
    44     34.9 MiB      0.0 MiB           1       sorted_files = []
    45     34.9 MiB      0.0 MiB           1       nbytes = 1 << 20            # 1048576 bytes at a time to be used in memory
    46     34.9 MiB      0.0 MiB           2       for lines in iter(partial(sys.stdin.readlines, nbytes), []):
    47     34.9 MiB      0.0 MiB           1           lines.sort(key=key_func, reverse=True) 
    48     34.9 MiB      0.0 MiB           1           f = TemporaryFile("w+")
    49     34.9 MiB      0.0 MiB           1           f.writelines(lines)
    50     34.9 MiB      0.0 MiB           1           f.seek(0)
    51     34.9 MiB      0.0 MiB           1           sorted_files.append(f)
    52                                         
    53     34.9 MiB      0.0 MiB           1       merged_list =  list(merge(*sorted_files, key=key_func, reverse=True))   # merge the sorted temporary files based on key function
    54                                         
    55     34.9 MiB      0.0 MiB           8       sys.stdout.writelines([f'{x.split(" ")[0]}\n' for x in merged_list[0:int(args.count)]])     # write into stdout the "COUNT" largest elements  
    56                                         
    57                                             # clean up
    58     34.9 MiB      0.0 MiB           2       for f in sorted_files:
    59     34.9 MiB      0.0 MiB           1           f.close()


Filename: assignment.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    41     34.9 MiB     34.9 MiB           1   @profile
    42                                         def main():
    43     34.9 MiB      0.0 MiB           1       args = _parse_args()
    44     34.9 MiB      0.0 MiB           1       sorted_files = []
    45     34.9 MiB      0.0 MiB           1       nbytes = 1 << 20            # 1048576 bytes at a time to be used in memory
    46     34.9 MiB      0.0 MiB           1       for lines in iter(partial(sys.stdin.readlines, nbytes), []):
    47                                                 lines.sort(key=key_func, reverse=True) 
    48                                                 f = TemporaryFile("w+")
    49                                                 f.writelines(lines)
    50                                                 f.seek(0)
    51                                                 sorted_files.append(f)
    52                                         
    53     34.9 MiB      0.0 MiB           1       merged_list =  list(merge(*sorted_files, key=key_func, reverse=True))   # merge the sorted temporary files based on key function
    54                                         
    55     34.9 MiB      0.0 MiB           3       sys.stdout.writelines([f'{x.split(" ")[0]}\n' for x in merged_list[0:int(args.count)]])     # write into stdout the "COUNT" largest elements  
    56                                         
    57                                             # clean up
    58     34.9 MiB      0.0 MiB           1       for f in sorted_files:
    59                                                 f.close()


         2862 function calls (2861 primitive calls) in 0.007 seconds

   Ordered by: standard name

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.007    0.007 <string>:1(<module>)
      159    0.000    0.000    0.000    0.000 <string>:1(__new__)
       12    0.000    0.000    0.000    0.000 _collections_abc.py:657(get)
        1    0.000    0.000    0.000    0.000 argparse.py:1031(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:1240(__init__)
        3    0.000    0.000    0.000    0.000 argparse.py:1255(__init__)
       37    0.000    0.000    0.000    0.000 argparse.py:1308(register)
        5    0.000    0.000    0.000    0.000 argparse.py:1312(_registry_get)
        2    0.000    0.000    0.001    0.000 argparse.py:1337(add_argument)
        2    0.000    0.000    0.000    0.000 argparse.py:1388(add_argument_group)
        2    0.000    0.000    0.000    0.000 argparse.py:1398(_add_action)
        1    0.000    0.000    0.000    0.000 argparse.py:1462(_get_positional_kwargs)
        1    0.000    0.000    0.000    0.000 argparse.py:1478(_get_optional_kwargs)
        2    0.000    0.000    0.000    0.000 argparse.py:1514(_pop_action_class)
        3    0.000    0.000    0.000    0.000 argparse.py:1518(_get_handler)
        2    0.000    0.000    0.000    0.000 argparse.py:1527(_check_conflict)
        2    0.000    0.000    0.000    0.000 argparse.py:1567(__init__)
        2    0.000    0.000    0.000    0.000 argparse.py:1589(_add_action)
        2    0.000    0.000    0.000    0.000 argparse.py:161(__init__)
        1    0.000    0.000    0.003    0.003 argparse.py:1638(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:1676(identity)
        2    0.000    0.000    0.000    0.000 argparse.py:1747(_add_action)
        1    0.000    0.000    0.000    0.000 argparse.py:1759(_get_positional_actions)
        1    0.000    0.000    0.000    0.000 argparse.py:1760(<listcomp>)
        1    0.000    0.000    0.000    0.000 argparse.py:1767(parse_args)
        1    0.000    0.000    0.000    0.000 argparse.py:1774(parse_known_args)
        1    0.000    0.000    0.000    0.000 argparse.py:1809(_parse_known_args)
        1    0.000    0.000    0.000    0.000 argparse.py:1856(take_action)
        1    0.000    0.000    0.000    0.000 argparse.py:1954(consume_positionals)
        2    0.000    0.000    0.000    0.000 argparse.py:202(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:2106(_match_arguments_partial)
        1    0.000    0.000    0.000    0.000 argparse.py:2112(<listcomp>)
        1    0.000    0.000    0.000    0.000 argparse.py:2116(<listcomp>)
        1    0.000    0.000    0.000    0.000 argparse.py:2122(_parse_optional)
        1    0.000    0.000    0.000    0.000 argparse.py:2225(_get_nargs_pattern)
        1    0.000    0.000    0.000    0.000 argparse.py:2358(_get_values)
        1    0.000    0.000    0.000    0.000 argparse.py:2414(_get_value)
        1    0.000    0.000    0.000    0.000 argparse.py:2440(_check_value)
        2    0.000    0.000    0.000    0.000 argparse.py:2480(_get_formatter)
        2    0.000    0.000    0.000    0.000 argparse.py:570(_metavar_formatter)
        2    0.000    0.000    0.000    0.000 argparse.py:579(format)
        2    0.000    0.000    0.000    0.000 argparse.py:586(_format_args)
        1    0.000    0.000    0.000    0.000 argparse.py:604(<listcomp>)
        2    0.000    0.000    0.000    0.000 argparse.py:809(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:851(__init__)
        1    0.000    0.000    0.000    0.000 argparse.py:880(__call__)
        1    0.000    0.000    0.003    0.003 assignment.py:32(_parse_args)
        1    0.001    0.001    0.004    0.004 assignment.py:41(main)
        1    0.000    0.000    0.000    0.000 assignment.py:55(<listcomp>)
        1    0.000    0.000    0.000    0.000 codecs.py:319(decode)
        1    0.000    0.000    0.000    0.000 contextlib.py:108(__enter__)
        1    0.000    0.000    0.000    0.000 contextlib.py:117(__exit__)
        1    0.000    0.000    0.000    0.000 contextlib.py:238(helper)
        1    0.000    0.000    0.000    0.000 contextlib.py:82(__init__)
        1    0.000    0.000    0.000    0.000 coroutines.py:164(iscoroutinefunction)
      149    0.000    0.000    0.000    0.000 enum.py:748(value)
        1    0.000    0.000    0.000    0.000 functools.py:429(_unwrap_partial)
       14    0.000    0.000    0.001    0.000 genericpath.py:16(exists)
        6    0.000    0.000    0.000    0.000 gettext.py:212(_expand_lang)
        3    0.000    0.000    0.002    0.001 gettext.py:538(find)
        3    0.000    0.000    0.002    0.001 gettext.py:579(translation)
        3    0.000    0.000    0.002    0.001 gettext.py:660(dgettext)
        3    0.000    0.000    0.002    0.001 gettext.py:735(gettext)
        1    0.000    0.000    0.000    0.000 heapq.py:314(merge)
        3    0.000    0.000    0.000    0.000 inspect.py:158(isfunction)
        1    0.000    0.000    0.000    0.000 inspect.py:171(_has_code_flag)
        1    0.000    0.000    0.000    0.000 inspect.py:189(iscoroutinefunction)
        3    0.000    0.000    0.000    0.000 inspect.py:236(istraceback)
        3    0.000    0.000    0.000    0.000 inspect.py:246(isframe)
       13    0.000    0.000    0.000    0.000 inspect.py:260(iscode)
        1    0.000    0.000    0.000    0.000 inspect.py:493(unwrap)
        1    0.000    0.000    0.000    0.000 inspect.py:510(_is_wrapper)
        4    0.000    0.000    0.000    0.000 inspect.py:63(ismodule)
        1    0.000    0.000    0.000    0.000 inspect.py:654(getfile)
        1    0.000    0.000    0.000    0.000 inspect.py:692(getsourcefile)
        3    0.000    0.000    0.000    0.000 inspect.py:699(<genexpr>)
        4    0.000    0.000    0.000    0.000 inspect.py:702(<genexpr>)
        1    0.000    0.000    0.000    0.000 inspect.py:714(getabsfile)
        2    0.000    0.000    0.000    0.000 inspect.py:72(isclass)
        1    0.000    0.000    0.000    0.000 inspect.py:726(getmodule)
        1    0.000    0.000    0.000    0.000 inspect.py:772(findsource)
        3    0.000    0.000    0.000    0.000 inspect.py:80(ismethod)
        1    0.000    0.000    0.000    0.000 inspect.py:899(__init__)
      159    0.000    0.000    0.000    0.000 inspect.py:909(tokeneater)
        1    0.000    0.000    0.002    0.002 inspect.py:959(getblock)
        1    0.000    0.000    0.003    0.003 inspect.py:970(getsourcelines)
        2    0.000    0.000    0.000    0.000 linecache.py:37(getlines)
        1    0.000    0.000    0.000    0.000 linecache.py:53(checkcache)
        6    0.000    0.000    0.000    0.000 locale.py:384(normalize)
        1    0.000    0.000    0.007    0.007 memory_profiler.py:1183(wrapper)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:1199(choose_backend)
        6    0.000    0.000    0.000    0.000 memory_profiler.py:1213(<genexpr>)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:638(__init__)
      2/1    0.000    0.000    0.003    0.003 memory_profiler.py:643(add)
        2    0.000    0.000    0.000    0.000 memory_profiler.py:687(items)
       20    0.000    0.000    0.000    0.000 memory_profiler.py:693(<genexpr>)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:700(__init__)
        1    0.000    0.000    0.003    0.003 memory_profiler.py:711(__call__)
        1    0.000    0.000    0.003    0.003 memory_profiler.py:726(add_function)
        2    0.000    0.000    0.000    0.000 memory_profiler.py:738(_count_ctxmgr)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:746(wrap_function)
        1    0.000    0.000    0.004    0.004 memory_profiler.py:757(f)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:773(enable_by_count)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:780(disable_by_count)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:840(enable)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:847(disable)
        1    0.000    0.000    0.000    0.000 memory_profiler.py:851(show_results)
       16    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
       16    0.000    0.000    0.000    0.000 os.py:748(encode)
        3    0.000    0.000    0.000    0.000 os.py:752(decode)
        1    0.000    0.000    0.000    0.000 posixpath.py:140(basename)
        1    0.000    0.000    0.000    0.000 posixpath.py:334(normpath)
        1    0.000    0.000    0.000    0.000 posixpath.py:372(abspath)
       15    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
        1    0.000    0.000    0.000    0.000 posixpath.py:52(normcase)
        1    0.000    0.000    0.000    0.000 posixpath.py:60(isabs)
       13    0.000    0.000    0.000    0.000 posixpath.py:71(join)
        1    0.000    0.000    0.000    0.000 re.py:188(match)
      155    0.000    0.000    0.001    0.000 re.py:250(compile)
      156    0.000    0.000    0.001    0.000 re.py:289(_compile)
        2    0.000    0.000    0.000    0.000 shutil.py:1301(get_terminal_size)
      160    0.001    0.000    0.002    0.000 tokenize.py:429(_tokenize)
        1    0.000    0.000    0.000    0.000 tokenize.py:612(generate_tokens)
      147    0.000    0.000    0.001    0.000 tokenize.py:98(_compile)
      149    0.000    0.000    0.000    0.000 types.py:171(__get__)
      159    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x7f1624768ac0}
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 {built-in method _heapq._heapify_max}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        5    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    0.007    0.007 {built-in method builtins.exec}
        6    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
        9    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.id}
      224    0.000    0.000    0.000    0.000 {built-in method builtins.isinstance}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       42    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.next}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       18    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
        2    0.000    0.000    0.000    0.000 {built-in method posix.get_terminal_size}
        1    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
       15    0.001    0.000    0.001    0.000 {built-in method posix.stat}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        1    0.000    0.000    0.000    0.000 {built-in method sys.gettrace}
        2    0.000    0.000    0.000    0.000 {built-in method sys.settrace}
        2    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       55    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        3    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       16    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
       46    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'fileno' of '_io.TextIOWrapper' objects}
       18    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
       37    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       41    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'groups' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
      123    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
      151    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        3    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        7    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       43    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      147    0.000    0.000    0.000    0.000 {method 'span' of 're.Match' objects}
        7    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       40    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       23    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.000    0.000 {method 'writelines' of '_io._IOBase' objects}


